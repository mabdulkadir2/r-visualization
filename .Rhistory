lines(y,x,type='l',lwd=3,col='red')
lines(x,y,type='l',lwd=3,col='red')
lines(y,x,type='l',lwd=3,col='red')
lines(y,x,type='2',lwd=3,col='red')
lines(y,x,type='1',lwd=4,col='red')
lines(ex1, type = '1', lwd = 3, col = 'red')
points(ex1, col = 'blue')
lines(ex1, type = '1', lwd = '3', col = blue)
lines(ex1, type = '10', lwd = '3', col = blue)
points(y,x,pch=19,col='green')
points(y,x,col='blue')
points(y,x,pch=17,col='green')
par(mfrow=c(2,2))
plot(x,y,type='l',lwd=3,col='blue')
plot(x,y,type='l',lwd=3,col='green')
plot(x,y,type='l',lwd=3,col='red')
plot(x,y,type='l',lwd=3,col='yellow')
plot(x, y, type = '1', lwd = '3', col = 'purple')
library(Matrix)
plot(ex1, type = '1', lwd = '3', col = 'purple')
plot(x, y, type = '1', lwd = '3', col = 'purple')
2 + 2
3 == 2
3 != 2
sum(x - y)
prod(x - y)
lenX -> length(x)
lenX <- length(x)
lenY <- length(y)
lenX - lenY
y[1]
y[2:4]
y[c(1, 3)]
plot(ex1, type = '1', lwd = 3, col = 'purple')
plot(x, y, type = '1', lwd = 3, col = 'purple')
par(mfrow=c(2,2))
plot(x, y, type = '1', lwd = 3, col = 'purple')
plot(x,y,type='l',lwd=3,col='blue')
plot(x, y, type = '1', lwd = 3, col = 'purple')
plot(x, y, type = 'l',lwd = 3, col = 'blue')
par(mfrow=(c(2,2)))
plot(x, y, type = '1', lwd = 3, col = 'purple')
plot(ex1, type = 'l', lwd = 3, col = 'purple')
lines(ex1, type = 'l', lwd = 3, col = 'pink')
lines(ex1, type = 'l', lwd = 3, col = 'blue')
xn <- seq(from = 2, by = 10, to = 30)
plot(x, y, type = 'l', lwd = 3, col = 'pink')
plot(y, x, type = 'l', lwd = 3, col = 'red')
plot(xn, type = 'l', lwd = 3, col = 'cyan')
par(mfrow=c(2,2))
plot(ex1, type = 'l', lwd = 3, col = 'purple')
lines(ex1, type = 'l', lwd = 3, col = 'blue')
plot(x, y, type = 'l', lwd = 3, col = 'pink')
plot(y, x, type = 'l', lwd = 3, col = 'red')
plot(xn, type = 'l', lwd = 3, col = 'cyan')
plot(y, x, type = 'l', lwd = 3, col = 'magenta')
xn <- seq(from = 2, by = 10, to = 30)
par(mfrow=c(2,2))
plot(ex1, type = 'l', lwd = 3, col = 'purple')
lines(ex1, type = 'l', lwd = 3, col = 'blue')
plot(x, y, type = 'l', lwd = 3, col = 'pink')
plot(y, x, type = 'l', lwd = 3, col = 'magenta')
plot(xn, type = 'l', lwd = 3, col = 'cyan')
firstMatrix <- matrix(seq(from=5, by=2, to=15), 5, 7)
secondMatrix <- matrix(5, 7, 4:7)
View(secondMatrix)
View(firstMatrix)
firstMatrix <- matrix(seq(from = 5, by = 2, to = 15), 5, 7, byrow = TRUE)
secondMatrix <- matrix(5, 7, 4:7, byrow = TRUE)
t(firstMatrix)
t(secondMatrix)
firstMatrix[1,1]
firstMatrix[5,4]
firstMatrix[5,4] + secondMatrix[1,1]
fmsm <- firstMatrix[5,4] + secondMatrix[1,1]
t(firstMatrix)
firstMatrix[1, ]
firstMatrix[, 1]
X[2:3,3] # second and third elements of third column
firstMatrix[, 1]
for(i in 2:15) {'hi'}
for(i in 2:15) {print('hi')}
x <- {2, 4, 6}
x <- c(1, 4, 6)
for(z in x) print(z)
x <- c(1, 4, 6)
c(1, 4, 6)
x <- 7
y <- 15
prod(x,sqrt(y))
x <- seq (from=1, by=1, to=10)
for(z in x) {
replace(x, 1:10, sqrt(x))
}
x <- seq (from=1, by=1, to=10)
for(z in x) {
replace(x, 1:10, sqrt(x))
print(z)
}
x <- seq (from=1, by=1, to=10)
for(z in x) {
replace(z, 1:10, sqrt(x))
print(z)
}
x <- seq(from=-2, by=0.1, to=2)
y = sqrt(2)
par(mfrow=c(1,1))
plot(x, type = 'l', lwd = 3, col = 'magenta')
plot(y, type = 'l', lwd = 3, col = 'cyan')
x <- seq(from=-2, by=0.1, to=2)
y = sqrt(2)
par(mfrow=c(2,2))
plot(x, type = 'l', lwd = 3, col = 'magenta')
plot(y, type = 'l', lwd = 3, col = 'cyan')
x <- seq(from=-2, by=0.1, to=2)
y = x^2
par(mfrow=c(1,1))
plot(x, type = 'l', lwd = 3, col = 'magenta')
plot(y, type = 'l', lwd = 3, col = 'cyan')
x <- seq(from=-2, by=0.1, to=2)
y = x^2
par(mfrow=c(2,1))
plot(x, type = 'l', lwd = 3, col = 'magenta')
x <- seq(from=-2, by=0.1, to=2)
y = x^2
par(mfrow=c(1,2))
plot(x, type = 'l', lwd = 3, col = 'magenta')
plot(y, type = 'l', lwd = 3, col = 'cyan')
points(x, pch='15', col = 'blue')
plot(x, type = 'l', lwd = 3, col = 'magenta')
points(x, pch='15', col = 'blue')
plot(x, type = 'l', lwd = 3, col = 'magenta')
points(x, pch='16', col = 'blue')
prod(x,sqrt(y))
plot(x, type = 'l', lwd = 3, col = 'magenta')
points(x, pch='17', col = 'magenta')
points(x, pch = '4', col = 'blue')
plot(x, type = 'l', lwd = 3, col = 'magenta')
plot(x, type = 'l', lwd = 3, col = 'magenta')
plot(y, type = 'l', lwd = 3, col = 'cyan')
points(y, pch='4', col='blue')
points(y, pch='1', col='blue')
points(y, pch='20', col='blue')
plot(x, type = 'l', lwd = 3, col = 'magenta')
plot(y, type = 'l', lwd = 3, col = 'cyan')
x <- seq (from=-2, by=0.1, to=2)
y <- x^2
plot(x, type='l', lwd=3, col='magenta')
plot(y, type='l', lwd=3, col='navy')
par(mfrow=c(1,2))
plot(x, type='l', lwd=3, col='magenta')
plot(y, type='l', lwd=3, col='navy')
z <- 0
while(z < 5) {
print(z,", ")  # 'cat' is a method for printing output (see help)
z <- z+1
cat(z,"\n")  # \n is the "newline" character
}
z <- 0
while(z < 5) {
print(z,", ")  # 'cat' is a method for printing output (see help)
z <- z+1
cat(z,"\n")  # \n is the "newline" character
}
z <- 0
while(z < 5) {
cat(z,", ")  # 'cat' is a method for printing output (see help)
z <- z+1
cat(z,"\n")  # \n is the "newline" character
}
z <- 0
while (z < 5) {
cat(z, "")
z <- z + 1
print(z, "");
}
z <- 0
while (z < 5) {
cat(z, "")
z <- z + 1
print(z, "")
}
?cat
z <- 4
while (z <= 5) {
cat(z, ", ")
z <- z + 1
cat(z, ", ")
}
z <- 4
while (z <= 10) {
cat(z, ", ")
z <- z + 1
cat(z, ", ")
}
z <- 2
while (z < 10) {
cat(z, "")
z <- z + 1
cat(z, '\n')
}
for(z in 1:10) {
cat(z, "")
z <- z + 1
cat(z, '\n')
}
for(i in 1:10) {
i <- i+10
print(i)
}
for(i in 2:9) {
print(i)
}
yn <- seq(from=5, by=10, to=50)
par(mfrow=c(2,2))
plot(yn, type='l', lwd=3, col = 'brown')
plot(x, y, type = 'l', lwd = 3, col = 'pink')
plot(y, x, type = 'l', lwd = 3, col = 'magenta')
plot(xn, type = 'l', lwd = 3, col = 'cyan')
xop[c(2:6)] <- 50
xop[c(2:6)]
x2 <- c(x, x)
x2
x
thirdMatrx <- matrix(3, 5, 6)
thirdMatrix
thirdMatrx <- matrix(5:15, 5, 6)
thirdMatrx <- matrix(5:15, 3, 4)
thirdMatrix <- matrix(5:15, 3, 4)
thirdMatrx
thirdMatrix[c(x,0.1)]
t(thirdMatrx)
firstMatrix[, 1]
t(firstMatrix[, 1])
for(i in 1:11) {
print('hi')
}
for(i in 1:11) {
cat(' ', 2)
}
for(i in 1:11) {
cat('', 2)
}
for(i in 1:10) {
i <- i + 10
print(i)
}
for(i in 1:10) {
i <- i * 10
print(i)
}
for(i in 1:10) {
i <- i * 10
i <- i - 1
print(i)
}
for(i in 1:10) {
i <- i * 10 - 1
print(i)
}
hi3 <- c(1, 5, 12.2678)
for(i in hi3) {
print(i)
}
hi3 <- c(1, 5, 12.2678, pi)
for(i in hi3) {
print(i )
}
hi3 <- c(1, 5, 12.2678, max)
for(i in hi3) {
print(i )
}
hi3 <- c(1, 5, 12.2678)
for(i in hi3) {
print(i + max)
}
hi3 <- c(1, 5, 12.2678)
for(i in hi3) {
print(i + 1)
}
while(i < 5) {
cat(i, '')
i <- i + 1.5
cat(i, '\n')
}
while(i < 5) {
cat(i, '')
i <- i + 1.5
cat(i, '\n')
}
while(i < 5) {
cat(i, '')
i <- i + 1.5
print(i, '\n')
}
while(i < 5) {
i <- i + 1.5
print(i, '\n')
}
if(z < -1) {
print("z < -1")
} else if (z<1) {
print("-1 <= z < 1")
} else {
print("z >= 1")
}
while(f < 5) {
cat(f, '')
f <- f + 1.5
cat(f, '\n')
}
f <- 1
while(f < 5) {
cat(f, '')
f <- f + 1.5
cat(f, '\n')
}
par(mfrow=c(2,2))
plot(yn, type='l', lwd=3, col = 'brown')
plot(x, y, type = 'l', lwd = 3, col = 'pink')
plot(y, x, type = 'l', lwd = 3, col = 'magenta')
plot(xn, type = 'l', lwd = 3, col = 'cyan')
dev.off()
par(mfrow=c(2,2))
plot(yn, type='l', lwd=3, col = 'brown')
plot(x, y, type = 'l', lwd = 3, col = 'pink')
plot(y, x, type = 'l', lwd = 3, col = 'magenta')
plot(xn, type = 'l', lwd = 3, col = 'cyan')
par(mfrow=c(2,2))
plot(xn, type = 'l', lwd = 3, col = 'red')
plot(x, y, type = 'l', lwd = 3, col = 'blue')
plot(xn, type = 'l', lwd = 3, col = 'cyan')
plot(yn, type = 'l', lwd = 3, col = 'magenta')
par(mfrow=c(2,2))
plot(xn, type = 'l', lwd = 3, col = 'red')
plot(x, y, type = 'l', lwd = 3, col = 'blue')
plot(anotherEx, type = 'l', lwd = 3, col = 'cyan')
par(mfrow=c(2,2))
plot(xn, type = 'l', lwd = 3, col = 'red')
plot(x, y, type = 'l', lwd = 3, col = 'blue')
plot(anotherEx, type = 'l', lwd = 3, col = 'cyan')
anotherEx <- seq(from=8, by=20, to=100)
par(mfrow=c(2,2))
plot(xn, type = 'l', lwd = 3, col = 'red')
plot(x, y, type = 'l', lwd = 3, col = 'blue')
plot(anotherEx, type = 'l', lwd = 3, col = 'cyan')
plot(yn, type = 'l', lwd = 3, col = 'magenta')
myOther <- matrix(5:30, 5, 6)
myOther <- matrix(5:30, 4, 5)
myOther <- matrix(5:25, 4, 5)
myOther <- matrix(5:25, 3, 5)
myOther <- matrix(1:20, 5, 5)
myOther <- matrix(1:25, 5, 5)
t(myOther)
dev.off()
plot(xn, type = 'l', lwd = 3, col = 'orange')
plot(sequence1, type = 'l', lwd = 3, col = 'magenta')
par(mfrow=c(1,2))
plot(xn, type = 'l', lwd = 3, col = 'orange')
plot(sequence1, type = 'l', lwd = 3, col = 'magenta')
plot(xn, type = 'l', lwd = 3, col = 'orange')
plot(sequence1, type = 'l', lwd = 3, col = 'magenta')
plot(sequence1, type = 'l', lwd = 3, col = 'magenta')
sequence1 <- seq(from = 10, by=10, to=100)
plot(xn, type = 'l', lwd = 3, col = 'orange')
plot(sequence1, type = 'l', lwd = 3, col = 'magenta')
oneVec <- c(4, 5, 6:20)
oneVec[1]
t_or_f <- oneVec[1] > oneVec[2]
oneVec[1] > oneVec[2]
oneVec[1] - oneVec[2]
guy1 <- 5
guy2 <- 10
(guy1 < 0) || (guy2 == 5)
(guy1 < 0) || (guy2 == 10)
(guy2 == 10) && (guy1 >= 0)
len(mo)
lengthMo <- length(mo)
lengthMo
sum(lengthMo * lenX)
oneVec[1, 2]
oneVec[c(1, 2)]
oneVec[-c(1, 2)]
oneVec[-(1, 2)]
oneVec[-(1, 2)]
oneVec[-(1:2)]
oneVec[c(1, 2)] <- 35
oneVec
dev.off()
par(mfrow=c(2,2))
plot(xn, type = 'l', lwd = 3, col = 'red')
plot(x, y, type = 'l', lwd = 3, col = 'blue')
plot(anotherEx, type = 'l', lwd = 3, col = 'cyan')
plot(yn, type = 'l', lwd = 3, col = 'magenta')
firstMatrix[1:2, 3]
secondMatrix[1, 4]
firstMatrix[1, max]
firstMatrix[1, max(2)]
t(firstMatrix)
apply(firstMatrix, 3, max)
apply(firstMatrix, 1, max)
t(firstMatrix)
max(firstMatrix(1))
max(firstMatrix[1,])
i <- 1
while(i <= 10) {
i * i
print(i, ',')
}
while(i < 10) {
i * i
print(i, "")
}
while(i < 10) {
i * i - 10
print(i, "")
}
z <- 1
ps in, say, C
z <- 1
while(z < 5) {
cat(z, ',')
z <- z + 1
cat(z, ',')
}
z <- 1
while(z > 5) {
cat(z, ',')
z <- z + 1
cat(z, '\n')
}
z <- 1
while(z < 5) {
cat(z, ',')
z <- z + 1
cat(z, '\n')
}
z <- 1
while(z < 5) {
cat(z, '')
z <- z + 1
cat(z, '\n')
}
anotha <- 5
if(anotha == 5) {
print('anotha is 5')
} else {
print('anotha is not 5')
}
x <- seq(from = -2, by = 0.1, to = 2)
y <- x^2
par(mfrow=c(1,2))
plot(x, type = 'l', lwd = 3, col = 'gold')
plot(y, type = 'l', lwd = 3, col = 'beige')
setwd("C:/Users/moham/Downloads/RCode")
mice = read.table("magentic_field.txt", head=TRUE)
y <- c(Group1Matrix[2:3, 4])
Group1Matrix <- matrix(mice$Weight_gain[mice$Group == 1], 4, 5)
y <- c(Group1Matrix[2:3, 4])
print(y)
x <- c(Group2Matrix[1, 3])
Group1Vec <- c(mice$Weight_gain[mice$Group == 1], min, max)
Group2Vec <- c(mice$Weight_gain[mice$Group == 2], min, max)
Group1Vec > Group2Vec
x <- c(Group2Matrix[1, 3])
Group2Matrix
Group2Matrix <- matrix(mice$Weight_gain[mice$Group == 2], 4, 5)
Group2Matrix
x <- c(Group2Matrix[1, 3])
x
print(y)
print(x)
length(x)
length(y)
x < y
if(length(x) < length(y)) {
plot(x)
} else {
plot(y)
}
y <- c(Group1Matrix[, 1])
x <- c(Group2Matrix[, 1])
print(y)
print(x)
if(length(x) < length(y)) {
plot(x)
} else {
plot(y)
}
plot(x, xlab = 'Mice', ylab = 'Weight Gain', main = 'Group 1 and 2 1st Row', col = 'blue', cex = 2)
points(y, col = 'red', cex = 2)
legend("topright")
summary(mice)
dim(mice)
names(mice)
quantile(mice$Weight_gain[mice$Group == 1])
quantile(mice$Weight_gain[mice$Group == 1])
quantile(mice$Weight_gain[mice$Group == 2])
pie(mice$Weight_gain[mice$Group == 1])
pie(mice$Weight_gain[mice$Group == 1], init.angle = 90)
label <- c("Cage1", "Cage2", "Cage3", "Cage4", "Cage5", "Cage6", "Cage7", "Cage8", "Cage9", "Cage10")
pie(mice$Weight_gain[mice$Group == 1], label, init.angle = 90)
diffcolors <- c('blue', 'red', 'pink', 'gold', 'green', 'magenta', 'cyan', 'brown','black', 'white')
pie(mice$Weight_gain[mice$Group == 1], label, colors, init.angle = 90)
pie(mice$Weight_gain[mice$Group == 1], colors, label, init.angle = 90)
pie(mice$Weight_gain[mice$Group == 1], label = label, diffcolors, init.angle = 90)
pie(mice$Weight_gain[mice$Group == 1], label, diffcolors, init.angle = 90)
pie(mice$Weight_gain[mice$Group == 1], label, init.angle = 90)
diffcolors <- c('blue', 'red', 'pink', 'gold', 'green', 'magenta', 'cyan', 'brown','black')
pie(mice$Weight_gain[mice$Group == 1], label, diffcolors, init.angle = 90)
pie(mice$Weight_gain[mice$Group == 1], label, init.angle = 90)
pie(mice$Weight_gain[mice$Group == 2], label, init.angle = 90)
